#this is the same code for the first playlist but for the second playlist (playlist with a wide range of genres).
import sys
sys.path.append('/opt/anaconda3/lib/python3.9/site-packages')

import spotipy
from spotipy.oauth2 import SpotifyClientCredentials
from spotipy.oauth2 import SpotifyOAuth
import spotipy.util as util
import matplotlib.pyplot as plt
import pandas as pd
from datetime import datetime
from sklearn.preprocessing import MinMaxScaler
from sklearn.metrics.pairwise import cosine_similarity
client_id = "b1e54575ac274390a4be1f2e837bb764"
client_secret = "e21f4bb168eb48f1812e79cd46f06e83"
redirect_link = "http://localhost:7777/callback"
playlist_link = "https://open.spotify.com/playlist/4VmnIdRk5w8Gky2U53LhSE?si=b09c4c9c82304b6f"

#Spotify api uses the unifrom resource identifiers, the URI of any
#spotify object is contained in its shareable link
playlist_URI = playlist_link.split("/")[-1].split("?")[0]


#For this section I will be attempting to make a playlist from the data in the real Spotify plst
client_credentials_manager = SpotifyClientCredentials(client_id = client_id,
                                                        client_secret = client_secret)
sp = spotipy.Spotify(client_credentials_manager = client_credentials_manager)
playlist_data = sp.user_playlist_tracks(playlist_id = playlist_link)
track_uris = [x["track"]["uri"] for x in sp.playlist_tracks(playlist_URI)["items"]]

tracks_uri = {}
tracks_artist_name = {}
for track in sp.playlist_tracks(playlist_URI)["items"]:
    #URI
    track_uri = track["track"]["uri"]
    
    #Track name
    track_name = track["track"]["name"]
    
    #Main Artist
    artist_uri = track["track"]["artists"][0]["uri"]
    artist_info = sp.artist(artist_uri)
    
    #Name, popularity, genre
    artist_name = track["track"]["artists"][0]["name"]
    artist_pop = artist_info["popularity"]
    artist_genres = artist_info["genres"]
    
    #Album
    album = track["track"]["album"]["name"]
    
    #Popularity of the track
    track_pop = track["track"]["popularity"]
    
    tracks_uri[track_name] = track_uri
    tracks_artist_name[track_name] = track["track"]["artists"][0]["name"]

    all_track_info = []

for track in tracks_uri:
    track_features = sp.audio_features(tracks_uri[track])[0]
    track_features['track_name'] = track
    track_features['track_artist'] = tracks_artist_name[track]
    all_track_info.append(track_features)

playlist_data = pd.DataFrame(all_track_info)
